apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'com.neenbedankt.android-apt'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${rootProject.ext.androidGradleVersion}"
        classpath "me.tatarka:gradle-retrolambda:${rootProject.ext.retroLambdaVersion}"
        classpath "com.neenbedankt.gradle.plugins:android-apt:${rootProject.ext.androidAptVersion}"
    }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        versionCode 1
        versionName "1.0"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        myConfig {
            storeFile file("keystore/slb.keystore")
            storePassword "1234qwer"
            keyAlias "shanlinjinrong"
            keyPassword "1234qwer"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-project.txt'
            signingConfig signingConfigs.myConfig
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }
    lintOptions {
        abortOnError false
    }


    sourceSets {
        // Move the tests to tests/java, tests/res, etc...
        main {
            jni.srcDirs = []
        }
        instrumentTest.setRoot('tests')
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':slidingmenu')
    //compile project(':ndk')
    compile project(':opencv')

    compile "com.jakewharton:butterknife:${rootProject.ext.butterKnifeVersion}"
    compile "com.squareup.dagger:dagger:${rootProject.ext.daggerVersion}"
    apt "com.squareup.dagger:dagger-compiler:${rootProject.ext.daggerCompilerVersion}"
    provided "javax.annotation:jsr250-api:${rootProject.ext.jsr250Version}"

    compile 'com.actionbarsherlock:actionbarsherlock:4.4.0@aar'
    compile "io.reactivex:rxjava:${rootProject.ext.rxJavaVersion}"
    compile "io.reactivex:rxandroid:${rootProject.ext.rxAndroidVersion}"

    compile "com.android.support:support-v4:${rootProject.ext.supportV4}"
	
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'com.loopj.android:android-async-http:1.4.4'
    compile 'commons-io:commons-io:2.4'
    compile 'com.j256.ormlite:ormlite-android:4.47'
    compile 'com.google.code.gson:gson:2.2.4'
    compile "com.google.guava:guava:${rootProject.ext.guavaVersion}"
    compile "com.squareup.retrofit:retrofit:${rootProject.ext.retrofitVersion}"
    compile "com.squareup.okhttp:okhttp:${rootProject.ext.okhttpVersion}"
    provided "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
    apt "org.projectlombok:lombok:${rootProject.ext.lombokVersion}"
}



